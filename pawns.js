/**
 * For each cell of a chess board, represent all the positions from which that cell might be attacked by a white pawn.
 * The x represents the position of the attacked cell for visual QoL only. It'll end up as a zero in the bitboard.
 * The ones represent all the positions where an opponent pawn can capture a piece on this cell.
 * (There are two sets since pawn moves are color-dependent and we can't represent that in the bitboard)
 * @type {BigInt[]}
 */
const whitePawnsThatCanCaptureOn = [
  // Bottom rows should not be possible in any way but whatever
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,

  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0000000x
    00000010
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    000000x0
    00000101
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000x00
    00001010
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0000x000
    00010100
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    000x0000
    00101000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00x00000
    01010000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0x000000
    10100000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    x0000000
    01000000
  `,

  `
    00000000
    00000000
    00000000
    00000000
    00000000
    0000000x
    00000010
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    000000x0
    00000101
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000x00
    00001010
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    0000x000
    00010100
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    000x0000
    00101000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00x00000
    01010000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    0x000000
    10100000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    x0000000
    01000000
    00000000
  `,

  `
    00000000
    00000000
    00000000
    00000000
    0000000x
    00000010
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    000000x0
    00000101
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000x00
    00001010
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    0000x000
    00010100
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    000x0000
    00101000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00x00000
    01010000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    0x000000
    10100000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    x0000000
    01000000
    00000000
    00000000
  `,

  `
    00000000
    00000000
    00000000
    0000000x
    00000010
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    000000x0
    00000101
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000x00
    00001010
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    0000x000
    00010100
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    000x0000
    00101000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00x00000
    01010000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    0x000000
    10100000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    x0000000
    01000000
    00000000
    00000000
    00000000
  `,

  `
    00000000
    00000000
    0000000x
    00000010
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    000000x0
    00000101
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000x00
    00001010
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    0000x000
    00010100
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    000x0000
    00101000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00x00000
    01010000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    0x000000
    10100000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    x0000000
    01000000
    00000000
    00000000
    00000000
    00000000
  `,

  `
    00000000
    0000000x
    00000010
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    000000x0
    00000101
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000x00
    00001010
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    0000x000
    00010100
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    000x0000
    00101000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00x00000
    01010000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    0x000000
    10100000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    x0000000
    01000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,

  `
    0000000x
    00000010
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    000000x0
    00000101
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000x00
    00001010
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    0000x000
    00010100
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    000x0000
    00101000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00x00000
    01010000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    0x000000
    10100000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    x0000000
    01000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
].map(s => BigInt(`0b${s.replace('x', '0').replace(/\s/g, '')}`));


// The pawn captures for black are the same but in a vertically mirrored position.
// To flip the board we can literally reverse the bits. We then have to reverse the array such that the index-to-pawn-on-index mapping matches.
// We'll do this in a hacky quick way here because why not.
const blackPawnsThatCanCaptureOn = whitePawnsThatCanCaptureOn.map(n => BigInt('0b' +
  //   00000000    00000000
  //   00000000    00010100
  //   00000000    0000x000
  //   00000000 -> 00000000
  //   00000000    00000000
  //   00x00000    00000000
  //   01010000    00000000
  //   00000000    00000000
  n
  .toString(2)
  .padStart(64, '0')
  .split('')
  .reverse()
  .join('')
)).reverse();

/**
 * @type {BigInt[]}
 */
const whitePawnsThatCanMoveTo = [
  // Bottom rows should not be possible in any way but whatever
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0000000x
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    000000x0
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000x00
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0000x000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    000x0000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00x00000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0x000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    x0000000
  `,

  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0000000x
    00000001
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    000000x0
    00000010
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000x00
    00000100
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0000x000
    00001000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    000x0000
    00010000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00x00000
    00100000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    0x000000
    01000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
    x0000000
    10000000
  `,

  `
    00000000
    00000000
    00000000
    00000000
    00000000
    0000000x
    00000001
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    000000x0
    00000010
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00000x00
    00000100
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    0000x000
    00001000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    000x0000
    00010000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    00x00000
    00100000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    0x000000
    01000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000000
    x0000000
    10000000
    00000000
  `,

  `
    00000000
    00000000
    00000000
    00000000
    0000000x
    00000001
    00000001
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    000000x0
    00000010
    00000010
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00000x00
    00000100
    00000100
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    0000x000
    00001000
    00001000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    000x0000
    00010000
    00010000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    00x00000
    00100000
    00100000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    0x000000
    01000000
    01000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000000
    x0000000
    10000000
    10000000
    00000000
  `,

  `
    00000000
    00000000
    00000000
    0000000x
    00000001
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    000000x0
    00000010
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00000x00
    00000100
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    0000x000
    00001000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    000x0000
    00010000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    00x00000
    00100000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    0x000000
    01000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000000
    x0000000
    10000000
    00000000
    00000000
    00000000
  `,

  `
    00000000
    00000000
    0000000x
    00000001
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    000000x0
    00000010
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00000x00
    00000100
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    0000x000
    00001000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    000x0000
    00010000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    00x00000
    00100000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    0x000000
    01000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000000
    x0000000
    10000000
    00000000
    00000000
    00000000
    00000000
  `,

  `
    00000000
    0000000x
    00000001
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    000000x0
    00000010
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00000x00
    00000100
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    0000x000
    00001000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    000x0000
    00010000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    00x00000
    00100000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    0x000000
    01000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000000
    x0000000
    10000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,

  `
    0000000x
    00000001
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    000000x0
    00000010
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00000x00
    00000100
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    0000x000
    00001000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    000x0000
    00010000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    00x00000
    00100000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    0x000000
    01000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
  `
    x0000000
    10000000
    00000000
    00000000
    00000000
    00000000
    00000000
    00000000
  `,
].map(s => BigInt(`0b${s.replace('x', '0').replace(/\s/g, '')}`));
/**
 * @type {BigInt[]}
 */
const blackPawnsThatCanMoveTo = whitePawnsThatCanMoveTo.map(n => BigInt('0b' +
  //   00000000    00000000
  //   00000000    00011100
  //   00000000    0000x000
  //   00000000 -> 00000000
  //   00000000    00000000
  //   00x00000    00000000
  //   01110000    00000000
  //   00000000    00000000
  n
  .toString(2)
  .padStart(64, '0')
  .split('')
  .reverse()
  .join('')
)).reverse();
